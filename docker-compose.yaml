version: '3.5'
services:
  ibmdb2:
    image: ibmcom/db2
    container_name: ibmdb2
    privileged: true
    ports:
      - "50000:50000/tcp"
    environment:
      DB2INST1_PASSWORD: apassword
      LICENSE: accept
      DBNAME: TESTDB
      SAMPLEDB: 1
    volumes:
      - ./database:/database
  mongodb:
    image: 'mongo'
    container_name: mongodb
    volumes:
      - ../docker-compose/mongo-volume:/data/db
    ports:
      - '27017:27017'

  datagrid:
    image: quay.io/infinispan/server:10.1.8.Final-1
    container_name: datagrid
    environment:
      IDENTITIES_PATH: /user-config/identities.yaml
      CONFIG_PATH: /user-config/config.yaml
    # command: ['sh', '-c', '/user-config/createCache.sh']
    volumes:
      - ./docker-config:/user-config:ro
    ports:
      - '11222:11222'

  zookeeper:
    image: strimzi/kafka:0.17.0-kafka-2.4.0
    container_name: zookeeper
    command:
      ['sh', '-c', 'bin/zookeeper-server-start.sh config/zookeeper.properties']
    ports:
      - '2181:2181'
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: strimzi/kafka:0.17.0-kafka-2.4.0
    container_name: kafka
    command:
      [
        'sh',
        '-c',
        'bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}',
      ]
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    expose:
      - '9092'
    environment:
      LOG_DIR: '/tmp/logs'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
