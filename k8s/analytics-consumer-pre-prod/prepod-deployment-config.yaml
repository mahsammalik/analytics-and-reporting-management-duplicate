kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: analytics-consumer
  namespace: jc-pre-prod-microservices
  labels:
    app: analytics-consumer
    app.kubernetes.io/part-of: jc-pre-prod-microservices
    monitoring.appd: AppD_NodeJS
spec:
  replicas: 1
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - analytics-consumer
        from:
          kind: ImageStreamTag
          namespace: jc-pre-prod-microservices
          name: 'analytics-consumer:latest'
  revisionHistoryLimit: 10
  test: false
  selector:
    app: analytics-consumer
    deploymentconfig: analytics-consumer
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: analytics-consumer
        deploymentconfig: analytics-consumer
      annotations:
        openshift.io/generated-by: jenkins-pipeline
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name:  analytics-consumer
          image: image-registry.openshift-image-registry.svc:5000/jc-pre-prod-microservices/analytics-consumer:latest
          ports:
            - containerPort: 3000
              protocol: TCP
          env:
          - name: MONGO_CONNECTION
            valueFrom:
              secretKeyRef:
                key: mongo-connection-string
                name: mongo-connection-analytics
          - name: ACCOUNT_STATEMENT_QUERY_SCHEDULER_INTERVAL
            value: '1 minutes'
          - name: ACCOUNT_STATEMENT_SCHEDULER
            value: 'true'
          - name: ACCOUNT_SCHEDULER_FAILURE_COUNT
            value: '3'
          - name : ACCOUNT_SCHEDULER_FAILURE_TIME_IN_MINUTES
            value: '30'
          - name: SCHEDULER_REQUEST_RETRIEVEL_TIME_IN_MINUTES
            value: '15'
          - name: SCHEDULER_REQUESTS_QUERY_LIMIT
            value: '1'
          - name: ACCOUNT_STATEMENT_TIMED_OUT_SCHEDULER_INTERVAL
            value: '1 seconds'
          - name: ACCOUNT_STATEMENT_OUTDATED_SCHEDULER
            value: 'true'
          - name: 'SCHEDULER_LOCK_TIME'
            value: '30000'
          - name: CACHE_SERVER
            value: datagrid.datagrid-prod
          - name: MONGO_CONNECTION
            valueFrom:
              secretKeyRef:
                key: mongo-connection-string
                name: mongo-connection-analytics
          - name: ESB_SERVER
            value: http://cps-rest-service-r1-is.ace:7800/rest/requestmgrservice/v1/sync
          - name: MASTER_DATA_API_GET_RESPCODE_URL
            value: http://masterdata-microservice:3000/rest/api/v1/masterdata/responseCodes
          - name: NOTIFICATION_SERVICE_URL_EMAIL
            value: http://notification-microservice:3000/rest/api/v1/notification/email
          - name: KAFKA_DRAIN_CHECK
            value: 'false'    
          - name: PRODUCTION_LOG_LEVEL
            value: info
          - name: NODE_ENV
            value: live
          - name: ACCOUNT_STATEMENT_QUERY_SCHEDULER_INTERVAL
            value: '1 minutes'
          - name: ACCOUNT_STATEMENT_SCHEDULER
            value: 'true'
          - name: ACCOUNT_SCHEDULER_FAILURE_COUNT
            value: '3'
          - name : ACCOUNT_SCHEDULER_FAILURE_TIME_IN_MINUTES
            value: '30'
          - name: Token_Validation
            value: 'true'
          - name: LOGIN_REPORT_V2
            value: 'false'
          - name: CONSUMER
            value: 'false'
          - name: CONSUMER_GROUP_ID
            valueFrom:
              configMapKeyRef:
                name: consumer-groups
                key: CONSUMER_GROUP_ANALYTICS
          - name: KAFKA_TOPICS_CONSUME_INTERVAL
            value: '300'
          readinessProbe:
            failureThreshold: 12
            httpGet:
              path: /ready
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 12
            httpGet:
              path: /live
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5                                                                      
          resources:
            limits:
              memory: 512Mi
              cpu: '0.3'
            requests:
              memory: 56Mi
              cpu: '120m'             
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler

